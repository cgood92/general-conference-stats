{"version":3,"file":"static/js/703.0f2ceeac.chunk.js","mappings":"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","sources":["case-2/data.ts","case-2/filters.tsx","case-2/crunching.tsx","case-2/wordCount.tsx","case-2/emptySearch.tsx","case-2/wordTrend.tsx","case-2/getChartOptions.ts","case-2/useParameters.ts","case-2/searchBar.tsx","case-2/index.tsx"],"sourcesContent":["import talks_1970_04 from \"@root/case2/output/1970-04.json\";\nimport talks_1970_10 from \"@root/case2/output/1970-10.json\";\nimport talks_1971_04 from \"@root/case2/output/1971-04.json\";\nimport talks_1971_10 from \"@root/case2/output/1971-10.json\";\nimport talks_1972_04 from \"@root/case2/output/1972-04.json\";\nimport talks_1972_10 from \"@root/case2/output/1972-10.json\";\nimport talks_1973_04 from \"@root/case2/output/1973-04.json\";\nimport talks_1973_10 from \"@root/case2/output/1973-10.json\";\nimport talks_1974_04 from \"@root/case2/output/1974-04.json\";\nimport talks_1974_10 from \"@root/case2/output/1974-10.json\";\nimport talks_1975_04 from \"@root/case2/output/1975-04.json\";\nimport talks_1975_10 from \"@root/case2/output/1975-10.json\";\nimport talks_1976_04 from \"@root/case2/output/1976-04.json\";\nimport talks_1976_10 from \"@root/case2/output/1976-10.json\";\nimport talks_1977_04 from \"@root/case2/output/1977-04.json\";\nimport talks_1977_10 from \"@root/case2/output/1977-10.json\";\nimport talks_1978_04 from \"@root/case2/output/1978-04.json\";\nimport talks_1978_10 from \"@root/case2/output/1978-10.json\";\nimport talks_1979_04 from \"@root/case2/output/1979-04.json\";\nimport talks_1979_10 from \"@root/case2/output/1979-10.json\";\nimport talks_1980_04 from \"@root/case2/output/1980-04.json\";\nimport talks_1980_10 from \"@root/case2/output/1980-10.json\";\nimport talks_1981_04 from \"@root/case2/output/1981-04.json\";\nimport talks_1981_10 from \"@root/case2/output/1981-10.json\";\nimport talks_1982_04 from \"@root/case2/output/1982-04.json\";\nimport talks_1982_10 from \"@root/case2/output/1982-10.json\";\nimport talks_1983_04 from \"@root/case2/output/1983-04.json\";\nimport talks_1983_10 from \"@root/case2/output/1983-10.json\";\nimport talks_1984_04 from \"@root/case2/output/1984-04.json\";\nimport talks_1984_10 from \"@root/case2/output/1984-10.json\";\nimport talks_1985_04 from \"@root/case2/output/1985-04.json\";\nimport talks_1985_10 from \"@root/case2/output/1985-10.json\";\nimport talks_1986_04 from \"@root/case2/output/1986-04.json\";\nimport talks_1986_10 from \"@root/case2/output/1986-10.json\";\nimport talks_1987_04 from \"@root/case2/output/1987-04.json\";\nimport talks_1987_10 from \"@root/case2/output/1987-10.json\";\nimport talks_1988_04 from \"@root/case2/output/1988-04.json\";\nimport talks_1988_10 from \"@root/case2/output/1988-10.json\";\nimport talks_1989_04 from \"@root/case2/output/1989-04.json\";\nimport talks_1989_10 from \"@root/case2/output/1989-10.json\";\nimport talks_1990_04 from \"@root/case2/output/1990-04.json\";\nimport talks_1990_10 from \"@root/case2/output/1990-10.json\";\nimport talks_1991_04 from \"@root/case2/output/1991-04.json\";\nimport talks_1991_10 from \"@root/case2/output/1991-10.json\";\nimport talks_1992_04 from \"@root/case2/output/1992-04.json\";\nimport talks_1992_10 from \"@root/case2/output/1992-10.json\";\nimport talks_1993_04 from \"@root/case2/output/1993-04.json\";\nimport talks_1993_10 from \"@root/case2/output/1993-10.json\";\nimport talks_1994_04 from \"@root/case2/output/1994-04.json\";\nimport talks_1994_10 from \"@root/case2/output/1994-10.json\";\nimport talks_1995_04 from \"@root/case2/output/1995-04.json\";\nimport talks_1995_10 from \"@root/case2/output/1995-10.json\";\nimport talks_1996_04 from \"@root/case2/output/1996-04.json\";\nimport talks_1996_10 from \"@root/case2/output/1996-10.json\";\nimport talks_1997_04 from \"@root/case2/output/1997-04.json\";\nimport talks_1997_10 from \"@root/case2/output/1997-10.json\";\nimport talks_1998_04 from \"@root/case2/output/1998-04.json\";\nimport talks_1998_10 from \"@root/case2/output/1998-10.json\";\nimport talks_1999_04 from \"@root/case2/output/1999-04.json\";\nimport talks_1999_10 from \"@root/case2/output/1999-10.json\";\nimport talks_2000_04 from \"@root/case2/output/2000-04.json\";\nimport talks_2000_10 from \"@root/case2/output/2000-10.json\";\nimport talks_2001_04 from \"@root/case2/output/2001-04.json\";\nimport talks_2001_10 from \"@root/case2/output/2001-10.json\";\nimport talks_2002_04 from \"@root/case2/output/2002-04.json\";\nimport talks_2002_10 from \"@root/case2/output/2002-10.json\";\nimport talks_2003_04 from \"@root/case2/output/2003-04.json\";\nimport talks_2003_10 from \"@root/case2/output/2003-10.json\";\nimport talks_2004_04 from \"@root/case2/output/2004-04.json\";\nimport talks_2004_10 from \"@root/case2/output/2004-10.json\";\nimport talks_2005_04 from \"@root/case2/output/2005-04.json\";\nimport talks_2005_10 from \"@root/case2/output/2005-10.json\";\nimport talks_2006_04 from \"@root/case2/output/2006-04.json\";\nimport talks_2006_10 from \"@root/case2/output/2006-10.json\";\nimport talks_2007_04 from \"@root/case2/output/2007-04.json\";\nimport talks_2007_10 from \"@root/case2/output/2007-10.json\";\nimport talks_2008_04 from \"@root/case2/output/2008-04.json\";\nimport talks_2008_10 from \"@root/case2/output/2008-10.json\";\nimport talks_2009_04 from \"@root/case2/output/2009-04.json\";\nimport talks_2009_10 from \"@root/case2/output/2009-10.json\";\nimport talks_2010_04 from \"@root/case2/output/2010-04.json\";\nimport talks_2010_10 from \"@root/case2/output/2010-10.json\";\nimport talks_2011_04 from \"@root/case2/output/2011-04.json\";\nimport talks_2011_10 from \"@root/case2/output/2011-10.json\";\nimport talks_2012_04 from \"@root/case2/output/2012-04.json\";\nimport talks_2012_10 from \"@root/case2/output/2012-10.json\";\nimport talks_2013_04 from \"@root/case2/output/2013-04.json\";\nimport talks_2013_10 from \"@root/case2/output/2013-10.json\";\nimport talks_2014_04 from \"@root/case2/output/2014-04.json\";\nimport talks_2014_10 from \"@root/case2/output/2014-10.json\";\nimport talks_2015_04 from \"@root/case2/output/2015-04.json\";\nimport talks_2015_10 from \"@root/case2/output/2015-10.json\";\nimport talks_2016_04 from \"@root/case2/output/2016-04.json\";\nimport talks_2016_10 from \"@root/case2/output/2016-10.json\";\nimport talks_2017_04 from \"@root/case2/output/2017-04.json\";\nimport talks_2017_10 from \"@root/case2/output/2017-10.json\";\nimport talks_2018_04 from \"@root/case2/output/2018-04.json\";\nimport talks_2018_10 from \"@root/case2/output/2018-10.json\";\nimport talks_2019_04 from \"@root/case2/output/2019-04.json\";\nimport talks_2019_10 from \"@root/case2/output/2019-10.json\";\nimport talks_2020_04 from \"@root/case2/output/2020-04.json\";\nimport talks_2020_10 from \"@root/case2/output/2020-10.json\";\nimport talks_2021_04 from \"@root/case2/output/2021-04.json\";\nimport talks_2021_10 from \"@root/case2/output/2021-10.json\";\nimport talks_2022_04 from \"@root/case2/output/2022-04.json\";\nimport talks_2022_10 from \"@root/case2/output/2022-10.json\";\n\nconst talksCombined = [\n  talks_1970_04,\n  talks_1970_10,\n  talks_1971_04,\n  talks_1971_10,\n  talks_1972_04,\n  talks_1972_10,\n  talks_1973_04,\n  talks_1973_10,\n  talks_1974_04,\n  talks_1974_10,\n  talks_1975_04,\n  talks_1975_10,\n  talks_1976_04,\n  talks_1976_10,\n  talks_1977_04,\n  talks_1977_10,\n  talks_1978_04,\n  talks_1978_10,\n  talks_1979_04,\n  talks_1979_10,\n  talks_1980_04,\n  talks_1980_10,\n  talks_1981_04,\n  talks_1981_10,\n  talks_1982_04,\n  talks_1982_10,\n  talks_1983_04,\n  talks_1983_10,\n  talks_1984_04,\n  talks_1984_10,\n  talks_1985_04,\n  talks_1985_10,\n  talks_1986_04,\n  talks_1986_10,\n  talks_1987_04,\n  talks_1987_10,\n  talks_1988_04,\n  talks_1988_10,\n  talks_1989_04,\n  talks_1989_10,\n  talks_1990_04,\n  talks_1990_10,\n  talks_1991_04,\n  talks_1991_10,\n  talks_1992_04,\n  talks_1992_10,\n  talks_1993_04,\n  talks_1993_10,\n  talks_1994_04,\n  talks_1994_10,\n  talks_1995_04,\n  talks_1995_10,\n  talks_1996_04,\n  talks_1996_10,\n  talks_1997_04,\n  talks_1997_10,\n  talks_1998_04,\n  talks_1998_10,\n  talks_1999_04,\n  talks_1999_10,\n  talks_2000_04,\n  talks_2000_10,\n  talks_2001_04,\n  talks_2001_10,\n  talks_2002_04,\n  talks_2002_10,\n  talks_2003_04,\n  talks_2003_10,\n  talks_2004_04,\n  talks_2004_10,\n  talks_2005_04,\n  talks_2005_10,\n  talks_2006_04,\n  talks_2006_10,\n  talks_2007_04,\n  talks_2007_10,\n  talks_2008_04,\n  talks_2008_10,\n  talks_2009_04,\n  talks_2009_10,\n  talks_2010_04,\n  talks_2010_10,\n  talks_2011_04,\n  talks_2011_10,\n  talks_2012_04,\n  talks_2012_10,\n  talks_2013_04,\n  talks_2013_10,\n  talks_2014_04,\n  talks_2014_10,\n  talks_2015_04,\n  talks_2015_10,\n  talks_2016_04,\n  talks_2016_10,\n  talks_2017_04,\n  talks_2017_10,\n  talks_2018_04,\n  talks_2018_10,\n  talks_2019_04,\n  talks_2019_10,\n  talks_2020_04,\n  talks_2020_10,\n  talks_2021_04,\n  talks_2021_10,\n  talks_2022_04,\n  talks_2022_10,\n].flat();\n\nexport default talksCombined;\n","import React from \"react\";\nimport { ComboBox, Item, RangeSlider, View } from \"@adobe/react-spectrum\";\nimport data from \"./data\";\n\nconst speakers = Array.from(new Set(data.map((talk) => talk.speaker)))\n  .filter(Boolean)\n  .sort()\n  .map((key) => ({ key, label: key }));\nspeakers.unshift({ key: \"\", label: \"All Speakers\" });\n\nexport const minYear = data[0].year;\nexport const maxYear = data.slice(-1)[0].year;\n\nexport type FilterState = {\n  speaker: string;\n  years: { start: number; end: number };\n};\n\ntype FiltersProps = {\n  onChange: (filterState: FilterState) => void;\n  value: FilterState;\n};\n\nexport default function Filters({ onChange, value }: FiltersProps) {\n  return (\n    <View width=\"15%\" marginStart=\"auto\" paddingX=\"size-300\">\n      <ComboBox\n        label=\"Speaker\"\n        width=\"100%\"\n        defaultSelectedKey={value.speaker}\n        defaultItems={speakers}\n        onSelectionChange={(speaker) =>\n          onChange({\n            ...value,\n            speaker: speaker as string,\n          })\n        }\n      >\n        {(speaker) => <Item key={speaker.key}>{speaker.label}</Item>}\n      </ComboBox>\n\n      <RangeSlider\n        label=\"Years\"\n        marginTop=\"size-200\"\n        width=\"100%\"\n        minValue={minYear}\n        maxValue={maxYear}\n        defaultValue={value.years}\n        getValueLabel={(years) => `${years.start} - ${years.end}`}\n        onChangeEnd={(years) =>\n          onChange({\n            ...value,\n            years,\n          })\n        }\n      />\n    </View>\n  );\n}\n","import React from \"react\";\nimport { Flex, ProgressCircle } from \"@adobe/react-spectrum\";\n\nexport default function Crunching() {\n  return (\n    <Flex alignItems=\"center\" gap=\"size-100\" marginTop=\"size-100\">\n      <ProgressCircle isIndeterminate size=\"S\" aria-label=\"Loading...\" />\n      Crunching the numbers...\n    </Flex>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Cell,\n  Column,\n  Row,\n  TableView,\n  TableBody,\n  TableHeader,\n} from \"@adobe/react-spectrum\";\nimport { removeStopwords } from \"stopword\";\nimport type { FilterState } from \"./filters\";\nimport data from \"./data\";\nimport \"./wordCount.css\";\nimport Crunching from \"./crunching\";\n\ntype WordCountProps = {\n  filters: FilterState;\n};\n\ntype WordCountItem = {\n  key: string;\n  rank: number;\n  _word: string;\n  count: number;\n};\n\nexport default function WordCount({ filters }: WordCountProps) {\n  const [loading, setLoading] = useState(true);\n  const [wordCountArray, setWordCountArray] = useState<Array<WordCountItem>>(\n    []\n  );\n\n  const columns = [\n    { name: \"Rank\", key: \"rank\", width: 200 },\n    { name: \"Word\", key: \"_word\" },\n    { name: \"Count\", key: \"count\" },\n  ];\n\n  useEffect(() => {\n    setLoading(true);\n    new Promise((resolve) => setTimeout(resolve))\n      .then(() =>\n        data.filter((talk) => {\n          let validSpeaker = true;\n\n          if (filters.speaker) {\n            validSpeaker = talk.speaker === filters.speaker;\n          }\n\n          const validYear =\n            talk.year <= filters.years.end && talk.year >= filters.years.start;\n\n          return validSpeaker && validYear;\n        })\n      )\n      .then((rows) =>\n        removeStopwords(\n          rows\n            .map((talk) => talk.content || \"\")\n            .join(\" \")\n            .replaceAll(\"\\n\", \"\")\n            .split(\" \")\n        )\n          .map((word) => word.replaceAll(/[^a-zA-Z]/gi, \"\"))\n          .filter((word) => word)\n          .reduce((acc: Record<string, number>, word: string) => {\n            acc[word] = acc[word] || 0;\n            acc[word]++;\n\n            return acc;\n          }, {})\n      )\n      .then((wordMap) =>\n        Object.keys(wordMap)\n          .sort((a, b) => wordMap[b] - wordMap[a])\n          .slice(0, 300)\n          .map((word, index) => ({\n            key: word,\n            rank: index + 1,\n            _word: word,\n            count: wordMap[word],\n          }))\n      )\n      .then((wordCountArray) => {\n        setWordCountArray(wordCountArray);\n        setLoading(false);\n      });\n  }, [filters.speaker, filters.years.end, filters.years.start]);\n\n  if (loading) {\n    return <Crunching />;\n  }\n\n  return (\n    <>\n      <p className=\"stop-words\">\n        * Note that some{\" \"}\n        <a\n          href=\"https://github.com/fergiemcdowall/stopword/blob/main/src/stopwords_eng.js\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          stop-words\n        </a>{\" \"}\n        are being filtered out\n      </p>\n      <TableView\n        aria-label=\"Word count table\"\n        marginTop=\"size-100\"\n        density=\"compact\"\n      >\n        <TableHeader columns={columns}>\n          {(column) => <Column width={column.width}>{column.name}</Column>}\n        </TableHeader>\n        <TableBody items={wordCountArray}>\n          {(item) => (\n            <Row>\n              {(columnKey) => {\n                if (columnKey === \"count\") {\n                  return (\n                    <Cell>{Number(item[columnKey]).toLocaleString()}</Cell>\n                  );\n                }\n\n                return <Cell>{item[columnKey as ColumnKey]}</Cell>;\n              }}\n            </Row>\n          )}\n        </TableBody>\n      </TableView>\n    </>\n  );\n}\n\ntype ColumnKey = \"_word\" | \"count\";\n","import React from \"react\";\nimport { Content, Heading, IllustratedMessage } from \"@adobe/react-spectrum\";\nimport NoSearchResults from \"@spectrum-icons/illustrations/NoSearchResults\";\n\nexport default function EmptySearch() {\n  return (\n    <IllustratedMessage height=\"auto\" marginY=\"size-1000\">\n      <NoSearchResults />\n      <Heading>No terms to search for</Heading>\n      <Content>Go ahead, search something else, it'll be fun!</Content>\n    </IllustratedMessage>\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport ApexChart from \"react-apexcharts\";\nimport { Link } from \"@adobe/react-spectrum\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { FilterState, minYear } from \"./filters\";\nimport data from \"./data\";\nimport \"./wordCount.css\";\nimport getChartOptions from \"./getChartOptions\";\nimport Crunching from \"./crunching\";\nimport EmptySearch from \"./emptySearch\";\n\ntype WordTrendProps = {\n  filters: FilterState;\n  searchTerms: Array<string>;\n};\n\ntype Series = { name: string; data: Array<number> };\n\nexport default function WordTrend({ filters, searchTerms }: WordTrendProps) {\n  const [loading, setLoading] = useState(true);\n  const [series, setSeries] = useState<Array<Series>>([]);\n\n  const yearsArray = useMemo(\n    () =>\n      new Array(filters.years.end - filters.years.start)\n        .fill(null)\n        .map((_, index) => minYear + index),\n    [filters.years.end, filters.years.start]\n  );\n\n  useEffect(() => {\n    if (searchTerms.length === 0) {\n      setLoading(false);\n      return;\n    }\n\n    new Promise((resolve) => setTimeout(resolve))\n      .then(() =>\n        data.filter((talk) => {\n          let validSpeaker = true;\n\n          if (filters.speaker) {\n            validSpeaker = talk.speaker === filters.speaker;\n          }\n\n          const validYear =\n            talk.year <= filters.years.end && talk.year >= filters.years.start;\n\n          return validSpeaker && validYear;\n        })\n      )\n      .then((rows) => rows.filter((talk) => talk.content))\n      .then((talks) =>\n        searchTerms.map((searchTerm) =>\n          talks\n            .map((talk) => ({\n              talk,\n              results: Array.from(\n                talk.content!.matchAll(new RegExp(searchTerm, \"ig\"))\n              ),\n            }))\n            .filter(({ results }) => results.length)\n        )\n      )\n      .then((results) =>\n        searchTerms.map((_, index) => {\n          const groupByYear = results[index].reduce(\n            (acc: Record<string, number>, resultSet) => {\n              const previous = acc[resultSet.talk.year] || 0;\n              acc[resultSet.talk.year] = previous + resultSet.results.length;\n\n              return acc;\n            },\n            {}\n          );\n\n          return yearsArray.map((year) => ({\n            key: year,\n            year,\n            count: groupByYear[year] || 0,\n          }));\n        })\n      )\n      .then((arraysByYear) =>\n        searchTerms.map((searchTerm, index) => ({\n          name: searchTerm,\n          data: arraysByYear[index].map(({ count }) => count),\n        }))\n      )\n      .then((series) => {\n        setSeries(series);\n        setLoading(false);\n      });\n  }, [\n    filters.speaker,\n    filters.years.end,\n    filters.years.start,\n    searchTerms,\n    yearsArray,\n  ]);\n\n  const goBack = (\n    <Link>\n      <RouterLink to=\"/case-2\">← Leave search</RouterLink>\n    </Link>\n  );\n\n  if (loading) {\n    return <Crunching />;\n  }\n\n  if (searchTerms.length === 0) {\n    return (\n      <>\n        <EmptySearch />\n        {goBack}\n      </>\n    );\n  }\n\n  const options = getChartOptions({ searchTerms, yearsArray });\n\n  return (\n    <>\n      <ApexChart options={options} series={series} type=\"line\" height={350} />\n      {goBack}\n    </>\n  );\n}\n","type options = {\n  searchTerms: Array<string>;\n  yearsArray: Array<number>;\n};\n\nexport default function getChartOptions({ searchTerms, yearsArray }: options) {\n  return {\n    chart: {\n      height: 350,\n      dropShadow: {\n        enabled: true,\n        color: \"#000\",\n        top: 18,\n        left: 7,\n        blur: 10,\n        opacity: 0.2,\n      },\n      toolbar: {\n        show: true,\n      },\n    },\n    dataLabels: {\n      enabled: true,\n    },\n    title: {\n      text: `Use of ${searchTerms\n        .map((term) => `\"${term}\"`)\n        .join(\", \")} over time`,\n    },\n    grid: {\n      borderColor: \"#e7e7e7\",\n      row: {\n        colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.5,\n      },\n    },\n    markers: {\n      size: 1,\n    },\n    xaxis: {\n      categories: yearsArray,\n    },\n    yaxis: {\n      title: {\n        text: \"Count\",\n      },\n    },\n  };\n}\n","import { useCallback, useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { FilterState, maxYear, minYear } from \"./filters\";\n\nconst defaultSearchParams = {\n  speaker: \"\",\n  start: String(minYear),\n  end: String(maxYear),\n  searchTerms: [],\n};\n\nexport default function useParameters() {\n  const [searchParams, setSearchParams] = useSearchParams(defaultSearchParams);\n\n  const speaker = searchParams.get(\"speaker\") || \"\";\n  const start = parseInt(searchParams.get(\"start\")!);\n  const end = parseInt(searchParams.get(\"end\")!);\n  const currentSearchText = searchParams.get(\"search\") || \"\";\n  const searchTerms = searchParams.getAll(\"searchTerms\");\n\n  const filters = useMemo(\n    () => ({\n      speaker,\n      years: {\n        start,\n        end,\n      },\n    }),\n    [end, speaker, start]\n  );\n\n  const setFilters = useCallback(\n    (filters: FilterState) =>\n      setSearchParams(\n        (previous) => (\n          previous.set(\"speaker\", filters.speaker),\n          previous.set(\"start\", String(filters.years.start)),\n          previous.set(\"end\", String(filters.years.end)),\n          previous\n        )\n      ),\n    [setSearchParams]\n  );\n\n  const setCurrentSearchText = useCallback(\n    (search: string) =>\n      setSearchParams((previous) => (previous.set(\"search\", search), previous)),\n    [setSearchParams]\n  );\n\n  const setSearchTerms = useCallback(\n    (callback: (previous: Array<string>) => Array<string>) =>\n      setSearchParams((urlSearchParams) => {\n        const previous = urlSearchParams.getAll(\"searchTerms\");\n        const next = callback(previous);\n\n        urlSearchParams.delete(\"searchTerms\");\n\n        next.forEach((term) => urlSearchParams.append(\"searchTerms\", term));\n\n        return urlSearchParams;\n      }),\n    [setSearchParams]\n  );\n\n  return {\n    filters,\n    setFilters,\n    currentSearchText,\n    setCurrentSearchText,\n    searchTerms,\n    setSearchTerms,\n  };\n}\n","import React, { useState } from \"react\";\nimport {\n  Content,\n  ContextualHelp,\n  Heading,\n  SearchField,\n  Well,\n} from \"@adobe/react-spectrum\";\nimport { Item, TagGroup } from \"@react-spectrum/tag\";\n\ntype SearchBarProps = {\n  searchTerms: string[];\n  setSearchTerms: (callback: (previous: string[]) => string[]) => void;\n};\n\nexport default function SearchBar({\n  searchTerms,\n  setSearchTerms,\n}: SearchBarProps) {\n  const [currentSearchText, setCurrentSearchText] = useState(\"\");\n\n  return (\n    <>\n      <SearchField\n        contextualHelp={<RegexHelp />}\n        value={currentSearchText}\n        onChange={setCurrentSearchText}\n        aria-label=\"Search for a term\"\n        label={<span />}\n        onClear={() => {\n          setCurrentSearchText(\"\");\n        }}\n        onSubmit={(term) => {\n          setSearchTerms((previous) => previous.concat(term));\n          setCurrentSearchText(\"\");\n        }}\n        minWidth=\"size-6000\"\n      />\n      <TagGroup\n        items={searchTerms.map((term) => ({ key: term, term }))}\n        allowsRemoving\n        onRemove={(term) =>\n          setSearchTerms((previous) =>\n            previous.filter((savedTerm) => savedTerm !== term)\n          )\n        }\n        aria-label=\"Search terms\"\n      >\n        {(item) => <Item>{item.term}</Item>}\n      </TagGroup>\n    </>\n  );\n}\n\nfunction RegexHelp() {\n  return (\n    <div>\n      Search for a term, and press \"Enter\" -\n      <ContextualHelp variant=\"info\" containerPadding={0}>\n        <Heading>Search tips</Heading>\n        <Content>\n          <p>\n            No stop-words are removed while searching. Search is exact (though\n            not case-sensitive), including punctuation.\n          </p>\n          <p>\n            Searching for \"eve\" will include \"eventually\", \"even\", \"never\", etc.\n            If you want just the word \"eve\" by itself, include spaces around the\n            term (ie \" eve \").\n          </p>\n          <p>RegEx allows you to do special searches. For example:</p>\n          <Well>(brothers|brethren)</Well>\n          <Well>great( and last)? day</Well>\n          <Well>Ne.son</Well>\n          <Well>Elder [a-zA-Z]+</Well>\n          <p>\n            Learn more about RegEx{\" \"}\n            <a href=\"https://regexone.com/\" target=\"_blank\" rel=\"noreferrer\">\n              here\n            </a>\n            .\n          </p>\n        </Content>\n      </ContextualHelp>\n      regex supported\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Flex, View } from \"@adobe/react-spectrum\";\nimport Filters from \"./filters\";\nimport WordCount from \"./wordCount\";\nimport WordTrend from \"./wordTrend\";\nimport useParameters from \"./useParameters\";\nimport SearchBar from \"./searchBar\";\nimport { Navigate, Routes, Route } from \"react-router-dom\";\n\nexport default function Main() {\n  const { filters, setFilters, searchTerms, setSearchTerms } = useParameters();\n\n  console.log(\"window.location.search\", window.location.search);\n\n  return (\n    <View height=\"100%\" paddingX=\"size-3000\">\n      <Flex height=\"100%\" direction=\"column\">\n        <SearchBar searchTerms={searchTerms} setSearchTerms={setSearchTerms} />\n        <Flex direction={{ base: \"row\", S: \"column\", M: \"row\" }}>\n          <section style={{ height: \"100%\", width: \"85%\" }}>\n            <Routes>\n              <Route\n                path=\"search\"\n                element={\n                  <WordTrend filters={filters} searchTerms={searchTerms} />\n                }\n              ></Route>\n              <Route\n                path=\"\"\n                element={\n                  searchTerms.length ? (\n                    <Navigate\n                      to={{\n                        pathname: \"search\",\n                        search: window.location.hash.substr(\n                          window.location.hash.indexOf(\"?\")\n                        ),\n                      }}\n                      replace={true}\n                    />\n                  ) : (\n                    <WordCount filters={filters} />\n                  )\n                }\n              ></Route>\n            </Routes>\n            {/* {searchTerms.length ? (\n              <WordTrend filters={filters} searchTerms={searchTerms} />\n            ) : (\n              <WordCount filters={filters} />\n            )} */}\n          </section>\n          <Filters onChange={setFilters} value={filters} />\n        </Flex>\n      </Flex>\n    </View>\n  );\n}\n"],"names":["flat","speakers","Array","from","Set","data","map","talk","speaker","filter","Boolean","sort","key","label","unshift","minYear","year","maxYear","slice","Filters","onChange","value","width","marginStart","paddingX","defaultSelectedKey","defaultItems","onSelectionChange","marginTop","minValue","maxValue","defaultValue","years","getValueLabel","start","end","onChangeEnd","Crunching","alignItems","gap","isIndeterminate","size","WordCount","filters","useState","loading","setLoading","wordCountArray","setWordCountArray","useEffect","Promise","resolve","setTimeout","then","validSpeaker","validYear","rows","removeStopwords","content","join","replaceAll","split","word","reduce","acc","wordMap","Object","keys","a","b","index","rank","_word","count","className","href","rel","target","density","columns","name","column","items","item","columnKey","Number","toLocaleString","EmptySearch","I","height","marginY","NoSearchResults","WordTrend","searchTerms","series","setSeries","yearsArray","useMemo","fill","_","length","talks","searchTerm","results","matchAll","RegExp","groupByYear","resultSet","previous","arraysByYear","goBack","to","options","chart","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","dataLabels","title","text","term","grid","borderColor","row","colors","markers","xaxis","categories","yaxis","getChartOptions","type","defaultSearchParams","String","SearchBar","setSearchTerms","currentSearchText","setCurrentSearchText","contextualHelp","RegexHelp","onClear","onSubmit","concat","minWidth","allowsRemoving","onRemove","savedTerm","variant","containerPadding","Main","useSearchParams","searchParams","setSearchParams","get","parseInt","getAll","setFilters","useCallback","set","search","callback","urlSearchParams","next","delete","forEach","append","useParameters","console","log","window","location","direction","base","S","M","style","path","element","pathname","hash","substr","indexOf","replace"],"sourceRoot":""}