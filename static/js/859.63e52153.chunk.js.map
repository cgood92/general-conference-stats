{"version":3,"file":"static/js/859.63e52153.chunk.js","mappings":"q3WAMMA,EAAQC,EAAAA,KAAS,YAAO,SAAJC,IAAe,IAEnCC,EAAe,CACnB,CACEC,KAAM,SACNH,KAAMA,EAAAA,KAAS,YAAS,SAANI,MAAmB,MAInCC,EAAc,CAClB,CACEF,KAAM,QACNH,KAAMA,EAAAA,KAAS,YAAQ,SAALM,KAAiB,MAIjCC,EAAmB,CACvB,CACEJ,KAAM,mBACNH,KAAMA,EAAAA,KAAS,YAAa,SAAVQ,UAA2B,MAI3CC,EAAiB,CACrB,CACEN,KAAM,mBACNH,KAAMA,EAAAA,KAAS,YAAW,SAARU,QAAuB,KAE3C,CACEP,KAAM,8BACNH,KAAMA,EAAAA,KAAS,YAAqB,SAAlBW,kBAA2C,MAI3DC,EAAgB,IAAIC,IAAI,CAC5B,CAACX,EAAc,UACf,CAACG,EAAa,SACd,CAACE,EAAkB,oBACnB,CAACE,EAAgB,cAGJ,SAASK,IACtB,OACE,SAAC,KAAI,CAACC,OAAO,OAAOC,SAAS,YAAW,SACrC,CAACd,EAAcG,EAAaE,EAAkBE,GAAgBQ,KAC7D,SAACC,EAAQC,GAAK,OACZ,SAAC,IAAS,CAERC,QAASC,EAAgB,CAAEC,MAAOV,EAAcW,IAAIL,KACpDA,OAAQA,EACRM,KAAK,OACLT,OAAQ,KAJHI,EAKL,KAKZ,CAEA,SAASE,EAAgB,GACvB,MAAO,CACLI,MAAO,CACLV,OAAQ,IACRW,WAAY,CACVC,SAAS,EACTC,MAAO,OACPC,IAAK,GACLC,KAAM,EACNC,KAAM,GACNC,QAAS,IAEXC,QAAS,CACPC,MAAM,IAGVC,WAAY,CACVR,SAAS,GAEXL,MAAO,CACLc,KApB0B,EAALd,OAsBvBe,KAAM,CACJC,YAAa,UACbC,IAAK,CACHC,OAAQ,CAAC,UAAW,eACpBR,QAAS,KAGbS,QAAS,CACPC,KAAM,IAERC,MAAO,CACLC,WAAY7C,GAEd8C,MAAO,CACLC,OAAQ,CACNC,UAAW,SAACC,GAAa,OAAKC,OAAOD,GAAOE,gBAAgB,IAIpE,C","sources":["case-1/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { View } from \"@adobe/react-spectrum\";\nimport ApexChart from \"react-apexcharts\";\n\nimport data from \"@root/case1/output/stats.json\";\n\nconst years = data.map(({ year }) => year);\n\nconst stakesSeries = [\n  {\n    name: \"Stakes\",\n    data: data.map(({ stakes }) => stakes),\n  },\n];\n\nconst wardsSeries = [\n  {\n    name: \"Wards\",\n    data: data.map(({ wards }) => wards),\n  },\n];\n\nconst membershipSeries = [\n  {\n    name: \"Total Membership\",\n    data: data.map(({ membership }) => membership),\n  },\n];\n\nconst baptismsSeries = [\n  {\n    name: \"Convert baptisms\",\n    data: data.map(({ converts }) => converts),\n  },\n  {\n    name: \"Children of record baptisms\",\n    data: data.map(({ children_of_record }) => children_of_record),\n  },\n];\n\nconst chartLabelMap = new Map([\n  [stakesSeries, \"Stakes\"],\n  [wardsSeries, \"Wards\"],\n  [membershipSeries, \"Total Membership\"],\n  [baptismsSeries, \"Baptisms\"],\n]);\n\nexport default function Main() {\n  return (\n    <View height=\"100%\" paddingX=\"size-3000\">\n      {[stakesSeries, wardsSeries, membershipSeries, baptismsSeries].map(\n        (series, index) => (\n          <ApexChart\n            key={index}\n            options={getChartOptions({ title: chartLabelMap.get(series)! })}\n            series={series}\n            type=\"line\"\n            height={350}\n          />\n        )\n      )}\n    </View>\n  );\n}\n\nfunction getChartOptions({ title }: { title: string }) {\n  return {\n    chart: {\n      height: 350,\n      dropShadow: {\n        enabled: true,\n        color: \"#000\",\n        top: 18,\n        left: 7,\n        blur: 10,\n        opacity: 0.2,\n      },\n      toolbar: {\n        show: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    title: {\n      text: title,\n    },\n    grid: {\n      borderColor: \"#e7e7e7\",\n      row: {\n        colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.5,\n      },\n    },\n    markers: {\n      size: 0.5,\n    },\n    xaxis: {\n      categories: years,\n    },\n    yaxis: {\n      labels: {\n        formatter: (value: number) => Number(value).toLocaleString()\n      }\n    },\n  }\n};"],"names":["years","data","year","stakesSeries","name","stakes","wardsSeries","wards","membershipSeries","membership","baptismsSeries","converts","children_of_record","chartLabelMap","Map","Main","height","paddingX","map","series","index","options","getChartOptions","title","get","type","chart","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","dataLabels","text","grid","borderColor","row","colors","markers","size","xaxis","categories","yaxis","labels","formatter","value","Number","toLocaleString"],"sourceRoot":""}