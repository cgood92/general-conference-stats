{"version":3,"file":"static/js/417.ca641b79.chunk.js","mappings":"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","sources":["data.ts","case-2/filters.tsx","case-2/wordCount.tsx","case-2/wordTrend.tsx","case-2/getChartOptions.ts","case-2/useParameters.ts","case-2/index.tsx"],"sourcesContent":["import talks_1970_04 from \"@root/case2/output/1970-04.json\";\nimport talks_1970_10 from \"@root/case2/output/1970-10.json\";\nimport talks_1971_04 from \"@root/case2/output/1971-04.json\";\nimport talks_1971_10 from \"@root/case2/output/1971-10.json\";\nimport talks_1972_04 from \"@root/case2/output/1972-04.json\";\nimport talks_1972_10 from \"@root/case2/output/1972-10.json\";\nimport talks_1973_04 from \"@root/case2/output/1973-04.json\";\nimport talks_1973_10 from \"@root/case2/output/1973-10.json\";\nimport talks_1974_04 from \"@root/case2/output/1974-04.json\";\nimport talks_1974_10 from \"@root/case2/output/1974-10.json\";\nimport talks_1975_04 from \"@root/case2/output/1975-04.json\";\nimport talks_1975_10 from \"@root/case2/output/1975-10.json\";\nimport talks_1976_04 from \"@root/case2/output/1976-04.json\";\nimport talks_1976_10 from \"@root/case2/output/1976-10.json\";\nimport talks_1977_04 from \"@root/case2/output/1977-04.json\";\nimport talks_1977_10 from \"@root/case2/output/1977-10.json\";\nimport talks_1978_04 from \"@root/case2/output/1978-04.json\";\nimport talks_1978_10 from \"@root/case2/output/1978-10.json\";\nimport talks_1979_04 from \"@root/case2/output/1979-04.json\";\nimport talks_1979_10 from \"@root/case2/output/1979-10.json\";\nimport talks_1980_04 from \"@root/case2/output/1980-04.json\";\nimport talks_1980_10 from \"@root/case2/output/1980-10.json\";\nimport talks_1981_04 from \"@root/case2/output/1981-04.json\";\nimport talks_1981_10 from \"@root/case2/output/1981-10.json\";\nimport talks_1982_04 from \"@root/case2/output/1982-04.json\";\nimport talks_1982_10 from \"@root/case2/output/1982-10.json\";\nimport talks_1983_04 from \"@root/case2/output/1983-04.json\";\nimport talks_1983_10 from \"@root/case2/output/1983-10.json\";\nimport talks_1984_04 from \"@root/case2/output/1984-04.json\";\nimport talks_1984_10 from \"@root/case2/output/1984-10.json\";\nimport talks_1985_04 from \"@root/case2/output/1985-04.json\";\nimport talks_1985_10 from \"@root/case2/output/1985-10.json\";\nimport talks_1986_04 from \"@root/case2/output/1986-04.json\";\nimport talks_1986_10 from \"@root/case2/output/1986-10.json\";\nimport talks_1987_04 from \"@root/case2/output/1987-04.json\";\nimport talks_1987_10 from \"@root/case2/output/1987-10.json\";\nimport talks_1988_04 from \"@root/case2/output/1988-04.json\";\nimport talks_1988_10 from \"@root/case2/output/1988-10.json\";\nimport talks_1989_04 from \"@root/case2/output/1989-04.json\";\nimport talks_1989_10 from \"@root/case2/output/1989-10.json\";\nimport talks_1990_04 from \"@root/case2/output/1990-04.json\";\nimport talks_1990_10 from \"@root/case2/output/1990-10.json\";\nimport talks_1991_04 from \"@root/case2/output/1991-04.json\";\nimport talks_1991_10 from \"@root/case2/output/1991-10.json\";\nimport talks_1992_04 from \"@root/case2/output/1992-04.json\";\nimport talks_1992_10 from \"@root/case2/output/1992-10.json\";\nimport talks_1993_04 from \"@root/case2/output/1993-04.json\";\nimport talks_1993_10 from \"@root/case2/output/1993-10.json\";\nimport talks_1994_04 from \"@root/case2/output/1994-04.json\";\nimport talks_1994_10 from \"@root/case2/output/1994-10.json\";\nimport talks_1995_04 from \"@root/case2/output/1995-04.json\";\nimport talks_1995_10 from \"@root/case2/output/1995-10.json\";\nimport talks_1996_04 from \"@root/case2/output/1996-04.json\";\nimport talks_1996_10 from \"@root/case2/output/1996-10.json\";\nimport talks_1997_04 from \"@root/case2/output/1997-04.json\";\nimport talks_1997_10 from \"@root/case2/output/1997-10.json\";\nimport talks_1998_04 from \"@root/case2/output/1998-04.json\";\nimport talks_1998_10 from \"@root/case2/output/1998-10.json\";\nimport talks_1999_04 from \"@root/case2/output/1999-04.json\";\nimport talks_1999_10 from \"@root/case2/output/1999-10.json\";\nimport talks_2000_04 from \"@root/case2/output/2000-04.json\";\nimport talks_2000_10 from \"@root/case2/output/2000-10.json\";\nimport talks_2001_04 from \"@root/case2/output/2001-04.json\";\nimport talks_2001_10 from \"@root/case2/output/2001-10.json\";\nimport talks_2002_04 from \"@root/case2/output/2002-04.json\";\nimport talks_2002_10 from \"@root/case2/output/2002-10.json\";\nimport talks_2003_04 from \"@root/case2/output/2003-04.json\";\nimport talks_2003_10 from \"@root/case2/output/2003-10.json\";\nimport talks_2004_04 from \"@root/case2/output/2004-04.json\";\nimport talks_2004_10 from \"@root/case2/output/2004-10.json\";\nimport talks_2005_04 from \"@root/case2/output/2005-04.json\";\nimport talks_2005_10 from \"@root/case2/output/2005-10.json\";\nimport talks_2006_04 from \"@root/case2/output/2006-04.json\";\nimport talks_2006_10 from \"@root/case2/output/2006-10.json\";\nimport talks_2007_04 from \"@root/case2/output/2007-04.json\";\nimport talks_2007_10 from \"@root/case2/output/2007-10.json\";\nimport talks_2008_04 from \"@root/case2/output/2008-04.json\";\nimport talks_2008_10 from \"@root/case2/output/2008-10.json\";\nimport talks_2009_04 from \"@root/case2/output/2009-04.json\";\nimport talks_2009_10 from \"@root/case2/output/2009-10.json\";\nimport talks_2010_04 from \"@root/case2/output/2010-04.json\";\nimport talks_2010_10 from \"@root/case2/output/2010-10.json\";\nimport talks_2011_04 from \"@root/case2/output/2011-04.json\";\nimport talks_2011_10 from \"@root/case2/output/2011-10.json\";\nimport talks_2012_04 from \"@root/case2/output/2012-04.json\";\nimport talks_2012_10 from \"@root/case2/output/2012-10.json\";\nimport talks_2013_04 from \"@root/case2/output/2013-04.json\";\nimport talks_2013_10 from \"@root/case2/output/2013-10.json\";\nimport talks_2014_04 from \"@root/case2/output/2014-04.json\";\nimport talks_2014_10 from \"@root/case2/output/2014-10.json\";\nimport talks_2015_04 from \"@root/case2/output/2015-04.json\";\nimport talks_2015_10 from \"@root/case2/output/2015-10.json\";\nimport talks_2016_04 from \"@root/case2/output/2016-04.json\";\nimport talks_2016_10 from \"@root/case2/output/2016-10.json\";\nimport talks_2017_04 from \"@root/case2/output/2017-04.json\";\nimport talks_2017_10 from \"@root/case2/output/2017-10.json\";\nimport talks_2018_04 from \"@root/case2/output/2018-04.json\";\nimport talks_2018_10 from \"@root/case2/output/2018-10.json\";\nimport talks_2019_04 from \"@root/case2/output/2019-04.json\";\nimport talks_2019_10 from \"@root/case2/output/2019-10.json\";\nimport talks_2020_04 from \"@root/case2/output/2020-04.json\";\nimport talks_2020_10 from \"@root/case2/output/2020-10.json\";\nimport talks_2021_04 from \"@root/case2/output/2021-04.json\";\nimport talks_2021_10 from \"@root/case2/output/2021-10.json\";\nimport talks_2022_04 from \"@root/case2/output/2022-04.json\";\nimport talks_2022_10 from \"@root/case2/output/2022-10.json\";\n\nconst talksCombined = [\n  talks_1970_04,\n  talks_1970_10,\n  talks_1971_04,\n  talks_1971_10,\n  talks_1972_04,\n  talks_1972_10,\n  talks_1973_04,\n  talks_1973_10,\n  talks_1974_04,\n  talks_1974_10,\n  talks_1975_04,\n  talks_1975_10,\n  talks_1976_04,\n  talks_1976_10,\n  talks_1977_04,\n  talks_1977_10,\n  talks_1978_04,\n  talks_1978_10,\n  talks_1979_04,\n  talks_1979_10,\n  talks_1980_04,\n  talks_1980_10,\n  talks_1981_04,\n  talks_1981_10,\n  talks_1982_04,\n  talks_1982_10,\n  talks_1983_04,\n  talks_1983_10,\n  talks_1984_04,\n  talks_1984_10,\n  talks_1985_04,\n  talks_1985_10,\n  talks_1986_04,\n  talks_1986_10,\n  talks_1987_04,\n  talks_1987_10,\n  talks_1988_04,\n  talks_1988_10,\n  talks_1989_04,\n  talks_1989_10,\n  talks_1990_04,\n  talks_1990_10,\n  talks_1991_04,\n  talks_1991_10,\n  talks_1992_04,\n  talks_1992_10,\n  talks_1993_04,\n  talks_1993_10,\n  talks_1994_04,\n  talks_1994_10,\n  talks_1995_04,\n  talks_1995_10,\n  talks_1996_04,\n  talks_1996_10,\n  talks_1997_04,\n  talks_1997_10,\n  talks_1998_04,\n  talks_1998_10,\n  talks_1999_04,\n  talks_1999_10,\n  talks_2000_04,\n  talks_2000_10,\n  talks_2001_04,\n  talks_2001_10,\n  talks_2002_04,\n  talks_2002_10,\n  talks_2003_04,\n  talks_2003_10,\n  talks_2004_04,\n  talks_2004_10,\n  talks_2005_04,\n  talks_2005_10,\n  talks_2006_04,\n  talks_2006_10,\n  talks_2007_04,\n  talks_2007_10,\n  talks_2008_04,\n  talks_2008_10,\n  talks_2009_04,\n  talks_2009_10,\n  talks_2010_04,\n  talks_2010_10,\n  talks_2011_04,\n  talks_2011_10,\n  talks_2012_04,\n  talks_2012_10,\n  talks_2013_04,\n  talks_2013_10,\n  talks_2014_04,\n  talks_2014_10,\n  talks_2015_04,\n  talks_2015_10,\n  talks_2016_04,\n  talks_2016_10,\n  talks_2017_04,\n  talks_2017_10,\n  talks_2018_04,\n  talks_2018_10,\n  talks_2019_04,\n  talks_2019_10,\n  talks_2020_04,\n  talks_2020_10,\n  talks_2021_04,\n  talks_2021_10,\n  talks_2022_04,\n  talks_2022_10,\n].flat();\n\nexport default talksCombined;\n","import React from \"react\";\nimport { ComboBox, Item, RangeSlider, View } from \"@adobe/react-spectrum\";\nimport data from \"../data\";\n\nconst speakers = Array.from(new Set(data.map((talk) => talk.speaker)))\n  .filter(Boolean)\n  .sort()\n  .map((key) => ({ key, label: key }));\nspeakers.unshift({ key: \"\", label: \"All Speakers\" });\n\nexport const minYear = data[0].year;\nexport const maxYear = data.slice(-1)[0].year;\n\nexport type FilterState = {\n  speaker: string;\n  years: { start: number; end: number };\n};\n\ntype FiltersProps = {\n  onChange: (filterState: FilterState) => void;\n  value: FilterState;\n};\n\nexport default function Filters({ onChange, value }: FiltersProps) {\n  return (\n    <View width=\"15%\" marginStart=\"auto\" paddingX=\"size-300\">\n      <ComboBox\n        label=\"Speaker\"\n        width=\"100%\"\n        defaultSelectedKey={value.speaker}\n        defaultItems={speakers}\n        onSelectionChange={(speaker) =>\n          onChange({\n            ...value,\n            speaker: speaker as string,\n          })\n        }\n      >\n        {(speaker) => <Item key={speaker.key}>{speaker.label}</Item>}\n      </ComboBox>\n\n      <RangeSlider\n        label=\"Years\"\n        marginTop=\"size-200\"\n        width=\"100%\"\n        minValue={minYear}\n        maxValue={maxYear}\n        defaultValue={value.years}\n        getValueLabel={(years) => `${years.start} - ${years.end}`}\n        onChangeEnd={(years) =>\n          onChange({\n            ...value,\n            years,\n          })\n        }\n      />\n    </View>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Cell,\n  Column,\n  Row,\n  TableView,\n  TableBody,\n  TableHeader,\n} from \"@adobe/react-spectrum\";\nimport { removeStopwords } from \"stopword\";\nimport type { FilterState } from \"./filters\";\nimport data from \"../data\";\nimport \"./wordCount.css\";\n\ntype WordCountProps = {\n  filters: FilterState;\n};\n\ntype WordCountItem = {\n  key: string;\n  rank: number;\n  _word: string;\n  count: number;\n};\n\nexport default function WordCount({ filters }: WordCountProps) {\n  const [loading, setLoading] = useState(true);\n  const [wordCountArray, setWordCountArray] = useState<Array<WordCountItem>>(\n    []\n  );\n\n  const columns = [\n    { name: \"Rank\", key: \"rank\", width: 200 },\n    { name: \"Word\", key: \"_word\" },\n    { name: \"Count\", key: \"count\" },\n  ];\n\n  useEffect(() => {\n    setLoading(true);\n    new Promise((resolve) => setTimeout(resolve))\n      .then(() =>\n        data.filter((talk) => {\n          let validSpeaker = true;\n\n          if (filters.speaker) {\n            validSpeaker = talk.speaker === filters.speaker;\n          }\n\n          const validYear =\n            talk.year <= filters.years.end && talk.year >= filters.years.start;\n\n          return validSpeaker && validYear;\n        })\n      )\n      .then((rows) =>\n        removeStopwords(\n          rows\n            .map((talk) => talk.content || \"\")\n            .join(\" \")\n            .replaceAll(\"\\n\", \"\")\n            .split(\" \")\n        )\n          .map((word) => word.replaceAll(/[^a-zA-Z]/gi, \"\"))\n          .filter((word) => word)\n          .reduce((acc: Record<string, number>, word: string) => {\n            acc[word] = acc[word] || 0;\n            acc[word]++;\n\n            return acc;\n          }, {})\n      )\n      .then((wordMap) =>\n        Object.keys(wordMap)\n          .sort((a, b) => wordMap[b] - wordMap[a])\n          .slice(0, 100)\n          .map((word, index) => ({\n            key: word,\n            rank: index + 1,\n            _word: word,\n            count: wordMap[word],\n          }))\n      )\n      .then((wordCountArray) => {\n        setWordCountArray(wordCountArray);\n        setLoading(false);\n      });\n  }, [filters.speaker, filters.years.end, filters.years.start]);\n\n  if (loading) {\n    return <div>Crunching the numbers...</div>;\n  }\n\n  return (\n    <>\n      <p className=\"stop-words\">\n        * Note that some{\" \"}\n        <a\n          href=\"https://github.com/fergiemcdowall/stopword/blob/main/src/stopwords_eng.js\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          stop-words\n        </a>{\" \"}\n        are being filtered out\n      </p>\n      <TableView\n        aria-label=\"Word count table\"\n        marginTop=\"size-100\"\n        density=\"compact\"\n      >\n        <TableHeader columns={columns}>\n          {(column) => <Column width={column.width}>{column.name}</Column>}\n        </TableHeader>\n        <TableBody items={wordCountArray}>\n          {(item) => (\n            <Row>\n              {(columnKey) => {\n                if (columnKey === \"count\") {\n                  return (\n                    <Cell>{Number(item[columnKey]).toLocaleString()}</Cell>\n                  );\n                }\n\n                return <Cell>{item[columnKey as ColumnKey]}</Cell>;\n              }}\n            </Row>\n          )}\n        </TableBody>\n      </TableView>\n    </>\n  );\n}\n\ntype ColumnKey = \"_word\" | \"count\";\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Cell,\n  Column,\n  Row,\n  TableView,\n  TableBody,\n  TableHeader,\n} from \"@adobe/react-spectrum\";\nimport ApexChart from \"react-apexcharts\";\nimport { FilterState, minYear, maxYear } from \"./filters\";\nimport data from \"../data\";\nimport \"./wordCount.css\";\nimport getChartOptions from \"./getChartOptions\";\n\nconst yearsArray = new Array(maxYear - minYear)\n  .fill(null)\n  .map((_, index) => minYear + index);\n\ntype WordTrendProps = {\n  filters: FilterState;\n  searchTerms: Array<string>;\n};\n\ntype Series = { name: string; data: Array<number> };\n\nexport default function WordTrend({ filters, searchTerms }: WordTrendProps) {\n  const [loading, setLoading] = useState(true);\n  const [series, setSeries] = useState<Array<Series>>();\n\n  // const columns = [\n  //   { name: \"Year\", key: \"year\", width: 200 },\n  //   { name: \"Count\", key: \"count\" },\n  // ];\n\n  useEffect(() => {\n    new Promise((resolve) => setTimeout(resolve))\n      .then(() =>\n        data.filter((talk) => {\n          let validSpeaker = true;\n\n          if (filters.speaker) {\n            validSpeaker = talk.speaker === filters.speaker;\n          }\n\n          const validYear =\n            talk.year <= filters.years.end && talk.year >= filters.years.start;\n\n          return validSpeaker && validYear;\n        })\n      )\n      .then((rows) => rows.filter((talk) => talk.content))\n      .then((talks) =>\n        searchTerms.map((searchTerm) =>\n          talks\n            .map((talk) => ({\n              talk,\n              results: Array.from(\n                talk.content!.matchAll(new RegExp(searchTerm, \"ig\"))\n              ),\n            }))\n            .filter(({ results }) => results.length)\n        )\n      )\n      .then((results) =>\n        searchTerms.map((_, index) => {\n          const groupByYear = results[index].reduce(\n            (acc: Record<string, number>, resultSet) => {\n              const previous = acc[resultSet.talk.year] || 0;\n              acc[resultSet.talk.year] = previous + resultSet.results.length;\n\n              return acc;\n            },\n            {}\n          );\n\n          return yearsArray.map((year) => ({\n            key: year,\n            year,\n            count: groupByYear[year] || 0,\n          }));\n        })\n      )\n      .then((arraysByYear) =>\n        searchTerms.map((searchTerm, index) => ({\n          name: searchTerm,\n          data: arraysByYear[index].map(({ count }) => count),\n        }))\n      )\n      .then((series) => {\n        setSeries(series);\n        setLoading(false);\n      });\n  }, [filters.speaker, filters.years.end, filters.years.start, searchTerms]);\n\n  if (loading) {\n    return <div>Crunching the numbers...</div>;\n  }\n\n  const options = getChartOptions({ searchTerms, yearsArray });\n\n  return (\n    <>\n      <ApexChart options={options} series={series} type=\"line\" height={350} />\n      {/* <TableView\n        aria-label=\"Word trend table\"\n        marginTop=\"size-100\"\n        density=\"compact\"\n      >\n        <TableHeader columns={columns}>\n          {(column) => <Column width={column.width}>{column.name}</Column>}\n        </TableHeader>\n        <TableBody items={arrayByYear}>\n          {(item) => (\n            <Row>\n              {(columnKey) => {\n                if (columnKey === \"count\") {\n                  return (\n                    <Cell>{Number(item[columnKey]).toLocaleString()}</Cell>\n                  );\n                }\n\n                return <Cell>{item[columnKey as ColumnKey]}</Cell>;\n              }}\n            </Row>\n          )}\n        </TableBody>\n      </TableView> */}\n    </>\n  );\n}\n\ntype ColumnKey = \"year\" | \"count\";\n\nfunction timeFromYear(year: number) {\n  return new Date(year, 0).getTime();\n}\n","type options = {\n  searchTerms: Array<string>;\n  yearsArray: Array<number>;\n};\n\nexport default function getChartOptions({ searchTerms, yearsArray }: options) {\n  return {\n    chart: {\n      height: 350,\n      dropShadow: {\n        enabled: true,\n        color: \"#000\",\n        top: 18,\n        left: 7,\n        blur: 10,\n        opacity: 0.2,\n      },\n      toolbar: {\n        show: true,\n      },\n    },\n    dataLabels: {\n      enabled: true,\n    },\n    title: {\n      text: `Use of ${searchTerms\n        .map((term) => `\"${term}\"`)\n        .join(\", \")} over time`,\n    },\n    grid: {\n      borderColor: \"#e7e7e7\",\n      row: {\n        colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.5,\n      },\n    },\n    markers: {\n      size: 1,\n    },\n    xaxis: {\n      categories: yearsArray,\n    },\n    yaxis: {\n      title: {\n        text: \"Count\",\n      },\n    },\n  };\n}\n","import { useCallback, useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { FilterState, maxYear, minYear } from \"./filters\";\n\nconst defaultSearchParams = {\n  speaker: \"\",\n  start: String(minYear),\n  end: String(maxYear),\n  search: \"\",\n  savedSearchTerms: [],\n};\n\nexport default function useParameters() {\n  const [searchParams, setSearchParams] = useSearchParams(defaultSearchParams);\n\n  // const [filters, setFilters] = useState<FilterState>(defaultFilters);\n  // const [currentSearchText, setCurrentSearchText] = useState<string>(\"\");\n  // const [savedSearchTerms, setSavedSearchTerms] = useState<Array<string>>([]);\n\n  const speaker = searchParams.get(\"speaker\") || \"\";\n  const start = parseInt(searchParams.get(\"start\")!);\n  const end = parseInt(searchParams.get(\"end\")!);\n  const currentSearchText = searchParams.get(\"search\") || \"\";\n  const savedSearchTerms = searchParams.getAll(\"savedSearchTerms\");\n\n  const filters = useMemo(\n    () => ({\n      speaker,\n      years: {\n        start,\n        end,\n      },\n    }),\n    [end, speaker, start]\n  );\n\n  const setFilters = useCallback(\n    (filters: FilterState) =>\n      setSearchParams(\n        (previous) => (\n          previous.set(\"speaker\", filters.speaker),\n          previous.set(\"start\", String(filters.years.start)),\n          previous.set(\"end\", String(filters.years.end)),\n          previous\n        )\n      ),\n    [setSearchParams]\n  );\n\n  const setCurrentSearchText = useCallback(\n    (search: string) =>\n      setSearchParams((previous) => (previous.set(\"search\", search), previous)),\n    [setSearchParams]\n  );\n\n  const setSavedSearchTerms = useCallback(\n    (callback: (previous: Array<string>) => Array<string>) =>\n      setSearchParams((urlSearchParams) => {\n        const previous = urlSearchParams.getAll(\"savedSearchTerms\");\n        const next = callback(previous);\n\n        urlSearchParams.delete(\"savedSearchTerms\");\n\n        next.forEach((term) =>\n          urlSearchParams.append(\"savedSearchTerms\", term)\n        );\n\n        return urlSearchParams;\n      }),\n    [setSearchParams]\n  );\n\n  return {\n    filters,\n    setFilters,\n    currentSearchText,\n    setCurrentSearchText,\n    savedSearchTerms,\n    setSavedSearchTerms,\n  };\n}\n","import React, { useMemo, useRef } from \"react\";\nimport { ActionButton, Flex, SearchField, View } from \"@adobe/react-spectrum\";\nimport { Item, TagGroup } from \"@react-spectrum/tag\";\nimport Filters from \"./filters\";\nimport WordCount from \"./wordCount\";\nimport WordTrend from \"./wordTrend\";\nimport useParameters from \"./useParameters\";\n\nexport default function Main() {\n  const {\n    filters,\n    setFilters,\n    currentSearchText,\n    setCurrentSearchText,\n    savedSearchTerms,\n    setSavedSearchTerms,\n  } = useParameters();\n\n  const searchFieldKey = useRef(0);\n  const searchTerms = useMemo(() => {\n    if (currentSearchText) {\n      return savedSearchTerms.concat(currentSearchText);\n    }\n    return savedSearchTerms;\n  }, [currentSearchText, savedSearchTerms]);\n\n  return (\n    <View\n      backgroundColor=\"static-gray-100\"\n      height=\"100%\"\n      flex={1}\n      paddingX=\"size-3000\"\n      paddingY=\"size-200\"\n    >\n      <Flex height=\"100%\" direction=\"column\">\n        <Flex alignItems=\"end\" gap=\"size-200\">\n          <SearchField\n            key={searchFieldKey.current}\n            defaultValue={currentSearchText}\n            label=\"Search for a term (regex supported)\"\n            onClear={() => setCurrentSearchText(\"\")}\n            onSubmit={(term) => setCurrentSearchText(term)}\n            minWidth=\"size-6000\"\n          />\n          <ActionButton\n            onPress={() => {\n              if (currentSearchText) {\n                searchFieldKey.current++;\n                setSavedSearchTerms((previous) =>\n                  previous.concat(currentSearchText)\n                );\n                setCurrentSearchText(\"\");\n              }\n            }}\n          >\n            Add another term\n          </ActionButton>\n        </Flex>\n        <TagGroup\n          items={savedSearchTerms.map((term) => ({ key: term, term }))}\n          allowsRemoving\n          onRemove={(term) =>\n            setSavedSearchTerms((previous) =>\n              previous.filter((savedTerm) => savedTerm !== term)\n            )\n          }\n          aria-label=\"Search terms\"\n        >\n          {(item) => <Item>{item.term}</Item>}\n        </TagGroup>\n        <Flex\n          direction={{ base: \"row\", S: \"column\", M: \"row\" }}\n          height=\"100%\"\n          UNSAFE_style={{ overflow: \"auto\" }}\n        >\n          <section style={{ height: \"100%\", width: \"85%\" }}>\n            {searchTerms.length ? (\n              <WordTrend filters={filters} searchTerms={searchTerms} />\n            ) : (\n              <WordCount filters={filters} />\n            )}\n          </section>\n          <Filters onChange={setFilters} value={filters} />\n        </Flex>\n      </Flex>\n    </View>\n  );\n}\n"],"names":["flat","speakers","Array","from","Set","data","map","talk","speaker","filter","Boolean","sort","key","label","unshift","minYear","year","maxYear","slice","Filters","onChange","value","width","marginStart","paddingX","defaultSelectedKey","defaultItems","onSelectionChange","marginTop","minValue","maxValue","defaultValue","years","getValueLabel","start","end","onChangeEnd","WordCount","filters","useState","loading","setLoading","wordCountArray","setWordCountArray","useEffect","Promise","resolve","setTimeout","then","validSpeaker","validYear","rows","removeStopwords","content","join","replaceAll","split","word","reduce","acc","wordMap","Object","keys","a","b","index","rank","_word","count","className","href","rel","target","density","columns","name","column","items","item","columnKey","Number","toLocaleString","yearsArray","fill","_","WordTrend","searchTerms","series","setSeries","talks","searchTerm","results","matchAll","RegExp","length","groupByYear","resultSet","previous","arraysByYear","options","chart","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","dataLabels","title","text","term","grid","borderColor","row","colors","markers","size","xaxis","categories","yaxis","getChartOptions","type","defaultSearchParams","String","search","savedSearchTerms","Main","useSearchParams","searchParams","setSearchParams","get","parseInt","currentSearchText","getAll","useMemo","setFilters","useCallback","set","setCurrentSearchText","setSavedSearchTerms","callback","urlSearchParams","next","delete","forEach","append","useParameters","searchFieldKey","useRef","concat","backgroundColor","flex","paddingY","direction","alignItems","gap","onClear","onSubmit","minWidth","current","onPress","allowsRemoving","onRemove","savedTerm","base","S","M","UNSAFE_style","overflow","style"],"sourceRoot":""}